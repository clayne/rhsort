diff --git a/src/bench.c b/src/bench.c
index 9cf9ef4..cdc2d51 100644
--- a/src/bench.c
+++ b/src/bench.c
@@ -57,8 +57,10 @@
 #include "gridsort.h"
 #include "blitsort.h"
 
-//#include "pdqsort.h" // https://github.com/orlp/pdqsort/blob/master/pdqsort.h
+#include "pdqsort.h" // https://github.com/orlp/pdqsort/blob/master/pdqsort.h
+#include "ska_sort.hpp"
 //#include "timsort.h" // https://github.com/timsort/cpp-TimSort
+#include "../../rhsort.c"
 
 #define STDSORT_H
 
@@ -230,6 +232,10 @@ void test_sort(void *array, void *unsorted, void *valid, int minimum, int maximu
 
 			switch (*name)
 			{
+				case 'r':
+					rhsort32(array, max);
+					break;
+
 				case 'b':
 					blitsort(array, max, size, cmpf);
 					break;
@@ -247,6 +253,9 @@ void test_sort(void *array, void *unsorted, void *valid, int minimum, int maximu
 					break;
 
 				case 's':
+					if (name[1]=='k')
+						ska_sort(pta, pta+max);
+					else
 #ifdef STDSORT_H
 
 					if (size == sizeof(int))
@@ -593,7 +602,7 @@ int main(int argc, char **argv)
 	long double *da_array, *dr_array, *dv_array;
 
 	char dist[100];
-	char *sorts[] = { "+", "stablesort", "blitsort", "quadsort", "gridsort", "fluxsort", "wolfsort" };
+	char *sorts[] = { "+", "quadsort", "pdqsort", "fluxsort", "wolfsort", "skasort", "rhsort" };
 //	char *sorts[] = { "+", "timsort", "stablesort", "quadsort", "gridsort", "fluxsort", "wolfsort" };
 
 	if (argc >= 1 && argv[1] && *argv[1])
@@ -664,6 +673,7 @@ int main(int argc, char **argv)
 	}
 #endif
 
+/*
 	// 128 bit
 
 	da_array = (long double *) malloc(max * sizeof(long double));
@@ -734,6 +744,7 @@ int main(int argc, char **argv)
 	free(la_array);
 	free(lr_array);
 	free(lv_array);
+*/
 
 	// 32 bit
 
